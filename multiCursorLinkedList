class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
         
            fast = head 
            slow = head
            while(fast != None and fast.next != None):
                fast = fast.next.next
                slow = slow.next
                if(slow == fast ):
                    return True
                
            return False    
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        fast,slow = head,head
        while(fast != None and fast.next != None):
            fast = fast.next.next
            slow =slow.next 
            if(fast == slow ):
                current = head
                while(current != slow ):
                    current = current.next
                    slow = slow.next 
                return slow
        return None   
