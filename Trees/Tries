class Node :
    def __init__(self,data):
        self.data = data
        self.nodes = []
        self.word = False
        
class Trie:
                        
    def __init__(self):
        self.head = None
    def add(self,input):
        parentnode = None
        if not self.head :
            parentnode = self.head
            
        print
        for idx,char in enumerate(input):
            newnode = Node(char)
            if not parentnode :
                self.head = Node(char)
                parentnode = self.head
                continue
            
            if idx == 0 :
                if char == parentnode.data:
                    
                   continue
                else:
                    print("cannnot add value to a diff root dict")
                    break 
         
            foundnode = False
            nodes = parentnode.nodes
            print(nodes)
            for node in nodes :
                print("====",node.data,char)
                if char == node.data:
                    newnode = node
                    foundnode = True
                    break
            print(parentnode.nodes)
            for node in parentnode.nodes : 
                print(node.data)
            parentnode.nodes.append(newnode)
            parentnode = newnode
        
        parentnode.word = True 
                                
            
                
